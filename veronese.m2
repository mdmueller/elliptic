-- try to find the Veronse surface S_1 \subset P^5

loadPackage "NumericalAlgebraicGeometry"

R = CC[a_(0,0)..a_(5,5)] -- matrix in PGL_6

S = CC[x,y,z] -- P^2
T = CC[t0,t1,t2,t3,t4,t5] -- P^5
f = map(S,T,{x^2,x*y,x*z,y^2,y*z,z^2})
I = ker(f) -- Veronese ideal inside P^5

U = R[t0,t1,t2,t3,t4,t5]
A = genericMatrix(R, 6, 6)
v = A * transpose(matrix{ {t0,t1,t2,t3,t4,t5} })
T0 = v_(0,0)
T1 = v_(1,0)
T2 = v_(2,0)
T3 = v_(3,0)
T4 = v_(4,0)
T5 = v_(5,0)
g = map(U,T,{T0,T1,T2,T3,T4,T5})
J = g I -- veronese ideal with t_i replaced by T_i

L = {
{(1-0*ii),(0.10527066811455595-0*ii),(-0.36831844488261334-0*ii),(0.0027704783913218792-0*ii),(-0.019386564385854475-0*ii),(0.03391461921018697-0*ii)},
{(1-0*ii),(1.0362258902403374-0*ii),(-0.5966881170712579-0*ii),(0.2684410239010789-0*ii),(-0.30915183765395976-0*ii),(0.08900917726349576-0*ii)},
{(1+0*ii),(-3.2485651408135454+0*ii),(1.0742624766678779+0*ii),(2.6382938685257202+0*ii),(-1.7449058168925073+0*ii),(0.28850996719394056-0*ii)},
{(1+0*ii),(-0.209354939140988+0*ii),(0.036322075970421995+0*ii),(0.010957372635592062+0*ii),(-0.003802103002069715+0*ii),(0.00032982330068979666+0*ii)},
{(1+0*ii),(-0.2929942283795186+0*ii),(0.0843838706155465+0*ii),(0.021461404465927387+0*ii),(-0.01236199352933958+0*ii),(0.0017801594050153105+0*ii)},
{(1+0*ii),(-0.3046462120778506+0*ii),(-0.15097323436270196+0*ii),(0.023202328633354898+0*ii),(0.022996711986840262+0*ii),(0.005698229373506649+0*ii)},
{(0.9999999999999999+0*ii),(-0.4441888438111258+0*ii),(0.23014116530390544+0*ii),(0.04932593224156641+0*ii),(-0.051113069064843794+0*ii),(0.013241238991859954+0*ii)},
{(1-0*ii),(7.586798737492278-0*ii),(-3.7280028736850843-0*ii),(14.38987877082232-0*ii),(-14.141803747738399-0*ii),(3.4745013565551948-0*ii)},
{(1+0*ii),(-0.31216662222320735-0.013992690106372503*ii),(0.07259394162470963+0.004935681062160962*ii),(0.024313051163458672+0.002184025403161273*ii),(-0.01129617104764394-0.0012782697071503336*ii),(0.0013113798532661124+0.00017915027145237083*ii)}
}
K = ideal(a_(0,0)-1) -- ideal in R that we want (assume 0,0th entry is 1)
for i from 0 to 5 do (
    h = map(R,U,L#i);
    K = K + (h J)
    )
solveSystem(first entries gens K)
